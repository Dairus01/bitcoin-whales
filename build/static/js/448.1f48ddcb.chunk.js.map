{"version":3,"file":"static/js/448.1f48ddcb.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/DataPanel.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport './DataPanel.css';\r\n\r\nconst DataPanel = ({ summaryData, blockData, whaleData }) => {\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return new Date(timestamp * 1000).toLocaleTimeString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-panel\">\r\n      {/* Summary Statistics */}\r\n      <motion.div \r\n        className=\"data-card summary-card\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <h3>📊 Summary Statistics</h3>\r\n        {summaryData ? (\r\n          <div className=\"summary-grid\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Transactions</span>\r\n              <span className=\"stat-value\">{summaryData.count}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Total Volume</span>\r\n              <span className=\"stat-value\">{summaryData.total_btc.toFixed(2)} BTC</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">USD Value</span>\r\n              <span className=\"stat-value\">{formatCurrency(summaryData.total_usd)}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Whales Detected</span>\r\n              <span className=\"stat-value highlight\">{summaryData.whales}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Average Size</span>\r\n              <span className=\"stat-value\">{summaryData.avg_btc.toFixed(2)} BTC</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Last Updated</span>\r\n              <span className=\"stat-value\">{formatTime(summaryData.timestamp)}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"loading-state\">\r\n            <div className=\"pulse-dot\"></div>\r\n            <span>Waiting for data...</span>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Recent Whale Transactions */}\r\n      <motion.div \r\n        className=\"data-card whales-card\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5, delay: 0.1 }}\r\n      >\r\n        <h3>🐋 Recent Whales</h3>\r\n        <div className=\"whales-list\">\r\n          <AnimatePresence>\r\n            {whaleData.slice(0, 5).map((whale, index) => (\r\n              <motion.div\r\n                key={`${whale.hash}-${whale.timestamp}`}\r\n                className=\"whale-item\"\r\n                initial={{ opacity: 0, x: -20 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: 20 }}\r\n                transition={{ duration: 0.3, delay: index * 0.1 }}\r\n              >\r\n                <div className=\"whale-header\">\r\n                  <span className=\"whale-time\">{formatTime(whale.timestamp)}</span>\r\n                  <span className=\"whale-value\">{whale.value_btc.toFixed(2)} BTC</span>\r\n                </div>\r\n                <div className=\"whale-details\">\r\n                  <span className=\"whale-usd\">{formatCurrency(whale.value_usd)}</span>\r\n                  <a \r\n                    href={`https://www.blockchain.com/btc/tx/${whale.hash}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"whale-hash\"\r\n                  >\r\n                    {whale.hash.slice(0, 8)}...\r\n                  </a>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n          {whaleData.length === 0 && (\r\n            <div className=\"empty-state\">\r\n              <span>No whale transactions yet</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Recent Blocks */}\r\n      <motion.div \r\n        className=\"data-card blocks-card\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5, delay: 0.2 }}\r\n      >\r\n        <h3>🔗 Recent Blocks</h3>\r\n        <div className=\"blocks-list\">\r\n          <AnimatePresence>\r\n            {blockData.map((block, index) => (\r\n              <motion.div\r\n                key={`${block.height}-${block.timestamp}`}\r\n                className=\"block-item\"\r\n                initial={{ opacity: 0, x: -20 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: 20 }}\r\n                transition={{ duration: 0.3, delay: index * 0.05 }}\r\n              >\r\n                <div className=\"block-info\">\r\n                  <span className=\"block-time\">{formatTime(block.timestamp)}</span>\r\n                  {block.height && (\r\n                    <span className=\"block-height\">Height: {block.height}</span>\r\n                  )}\r\n                  {block.n_tx && (\r\n                    <span className=\"block-txs\">{block.n_tx} transactions</span>\r\n                  )}\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n          {blockData.length === 0 && (\r\n            <div className=\"empty-state\">\r\n              <span>No blocks detected yet</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataPanel;\r\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","summaryData","blockData","whaleData","formatCurrency","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatTime","timestamp","Date","toLocaleTimeString","_jsxs","className","motion","div","opacity","y","animate","transition","duration","_jsx","count","total_btc","toFixed","total_usd","whales","avg_btc","delay","slice","whale","index","x","exit","value_btc","value_usd","href","hash","target","rel","block","n_tx"],"sourceRoot":""}
{"ast":null,"code":"import React,{useRef,useMemo}from'react';import{useFrame}from'@react-three/fiber';import{Text,Sphere,Box,Cylinder}from'@react-three/drei';import*as THREE from'three';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WhaleBubble=_ref=>{let{data,config,index}=_ref;const meshRef=useRef();const[hovered,setHovered]=React.useState(false);// Calculate size based on BTC value relative to threshold\nconst size=Math.max(0.5,Math.min(3,data.value_btc/config.threshold));// Calculate color based on value (blue to red gradient)\nconst colorIntensity=Math.min(1,data.value_btc/(config.threshold*2));const color=new THREE.Color().setHSL(0.6-colorIntensity*0.3,0.8,0.5+colorIntensity*0.3);// Position in a spiral pattern\nconst angle=index*0.5;const radius=5+index*0.3;const x=Math.cos(angle)*radius;const y=Math.sin(angle)*radius;const z=-index*0.5;useFrame(state=>{if(meshRef.current){// Gentle floating animation\nmeshRef.current.position.y=y+Math.sin(state.clock.elapsedTime+index)*0.5;meshRef.current.rotation.x=Math.sin(state.clock.elapsedTime*0.5)*0.1;meshRef.current.rotation.z=Math.cos(state.clock.elapsedTime*0.3)*0.1;// Pulse effect for hovered bubbles\nif(hovered){meshRef.current.scale.setScalar(1.2);}else{meshRef.current.scale.setScalar(1);}}});return/*#__PURE__*/_jsxs(\"group\",{position:[x,y,z],children:[/*#__PURE__*/_jsx(Sphere,{ref:meshRef,args:[size,16,16],onPointerOver:()=>setHovered(true),onPointerOut:()=>setHovered(false),children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:color,transparent:true,opacity:0.8,emissive:color,emissiveIntensity:hovered?0.3:0.1})}),hovered&&/*#__PURE__*/_jsx(Text,{position:[0,size+0.5,0],fontSize:0.3,color:\"white\",anchorX:\"center\",anchorY:\"middle\",children:\"\".concat(data.value_btc.toFixed(2),\" BTC\")})]});};const BlockchainNetwork=_ref2=>{let{blockData}=_ref2;const blocksRef=useRef();useFrame(state=>{if(blocksRef.current){blocksRef.current.rotation.y=state.clock.elapsedTime*0.1;}});return/*#__PURE__*/_jsx(\"group\",{ref:blocksRef,position:[0,0,-10],children:blockData.map((block,index)=>{const angle=index/blockData.length*Math.PI*2;const radius=8;const x=Math.cos(angle)*radius;const z=Math.sin(angle)*radius;return/*#__PURE__*/_jsxs(\"group\",{position:[x,0,z],children:[/*#__PURE__*/_jsx(Box,{args:[1,1,1],position:[0,0,0],children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#4CAF50\",transparent:true,opacity:0.7,emissive:\"#4CAF50\",emissiveIntensity:0.2})}),index<blockData.length-1&&/*#__PURE__*/_jsx(Cylinder,{args:[0.05,0.05,radius*0.8],position:[x*0.4,0,z*0.4],rotation:[0,0,Math.atan2(z,x)],children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#2196F3\",transparent:true,opacity:0.3})})]},index);})});};const DataFlow=_ref3=>{let{summaryData}=_ref3;const flowRef=useRef();useFrame(state=>{if(flowRef.current&&summaryData){// Animate data flow particles\nflowRef.current.children.forEach((child,index)=>{child.position.y+=0.02;if(child.position.y>10){child.position.y=-10;}});}});if(!summaryData)return null;return/*#__PURE__*/_jsx(\"group\",{ref:flowRef,position:[0,0,5],children:Array.from({length:20},(_,i)=>/*#__PURE__*/_jsx(Sphere,{args:[0.1,8,8],position:[(Math.random()-0.5)*10,(Math.random()-0.5)*20,(Math.random()-0.5)*5],children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#64B5F6\",transparent:true,opacity:0.6,emissive:\"#64B5F6\",emissiveIntensity:0.3})},i))});};const CentralHub=_ref4=>{let{whaleData,summaryData}=_ref4;const hubRef=useRef();useFrame(state=>{if(hubRef.current){hubRef.current.rotation.y=state.clock.elapsedTime*0.2;hubRef.current.rotation.x=Math.sin(state.clock.elapsedTime*0.5)*0.1;}});const activeWhales=whaleData.length;const totalVolume=(summaryData===null||summaryData===void 0?void 0:summaryData.total_btc)||0;return/*#__PURE__*/_jsxs(\"group\",{ref:hubRef,position:[0,0,0],children:[/*#__PURE__*/_jsx(Sphere,{args:[2,32,32],children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#FF9800\",transparent:true,opacity:0.8,emissive:\"#FF9800\",emissiveIntensity:0.3})}),/*#__PURE__*/_jsx(Text,{position:[0,3,0],fontSize:0.5,color:\"white\",anchorX:\"center\",anchorY:\"middle\",children:\"\".concat(activeWhales,\" Whales\")}),/*#__PURE__*/_jsx(Text,{position:[0,-3,0],fontSize:0.4,color:\"white\",anchorX:\"center\",anchorY:\"middle\",children:\"\".concat(totalVolume.toFixed(1),\" BTC\")}),Array.from({length:3},(_,i)=>/*#__PURE__*/_jsxs(\"mesh\",{position:[0,0,0],children:[/*#__PURE__*/_jsx(\"ringGeometry\",{args:[2.5+i*0.5,2.6+i*0.5,32]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#2196F3\",transparent:true,opacity:0.3-i*0.1,side:THREE.DoubleSide})]},i))]});};const WhaleVisualization=_ref5=>{let{whaleData,summaryData,blockData,config}=_ref5;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CentralHub,{whaleData:whaleData,summaryData:summaryData}),whaleData.map((whale,index)=>/*#__PURE__*/_jsx(WhaleBubble,{data:whale,config:config,index:index},\"\".concat(whale.hash,\"-\").concat(whale.timestamp))),/*#__PURE__*/_jsx(BlockchainNetwork,{blockData:blockData}),/*#__PURE__*/_jsx(DataFlow,{summaryData:summaryData}),/*#__PURE__*/_jsx(\"fog\",{attach:\"fog\",args:['#0a1943',10,50]})]});};export default WhaleVisualization;","map":{"version":3,"names":["React","useRef","useMemo","useFrame","Text","Sphere","Box","Cylinder","THREE","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WhaleBubble","_ref","data","config","index","meshRef","hovered","setHovered","useState","size","Math","max","min","value_btc","threshold","colorIntensity","color","Color","setHSL","angle","radius","x","cos","y","sin","z","state","current","position","clock","elapsedTime","rotation","scale","setScalar","children","ref","args","onPointerOver","onPointerOut","transparent","opacity","emissive","emissiveIntensity","fontSize","anchorX","anchorY","concat","toFixed","BlockchainNetwork","_ref2","blockData","blocksRef","map","block","length","PI","atan2","DataFlow","_ref3","summaryData","flowRef","forEach","child","Array","from","_","i","random","CentralHub","_ref4","whaleData","hubRef","activeWhales","totalVolume","total_btc","side","DoubleSide","WhaleVisualization","_ref5","whale","hash","timestamp","attach"],"sources":["C:/Users/user/Downloads/whalewatch_web_updated/src/components/WhaleVisualization.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { Text, Sphere, Box, Cylinder } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\nconst WhaleBubble = ({ data, config, index }) => {\r\n  const meshRef = useRef();\r\n  const [hovered, setHovered] = React.useState(false);\r\n  \r\n  // Calculate size based on BTC value relative to threshold\r\n  const size = Math.max(0.5, Math.min(3, data.value_btc / config.threshold));\r\n  \r\n  // Calculate color based on value (blue to red gradient)\r\n  const colorIntensity = Math.min(1, data.value_btc / (config.threshold * 2));\r\n  const color = new THREE.Color().setHSL(0.6 - colorIntensity * 0.3, 0.8, 0.5 + colorIntensity * 0.3);\r\n  \r\n  // Position in a spiral pattern\r\n  const angle = index * 0.5;\r\n  const radius = 5 + index * 0.3;\r\n  const x = Math.cos(angle) * radius;\r\n  const y = Math.sin(angle) * radius;\r\n  const z = -index * 0.5;\r\n\r\n  useFrame((state) => {\r\n    if (meshRef.current) {\r\n      // Gentle floating animation\r\n      meshRef.current.position.y = y + Math.sin(state.clock.elapsedTime + index) * 0.5;\r\n      meshRef.current.rotation.x = Math.sin(state.clock.elapsedTime * 0.5) * 0.1;\r\n      meshRef.current.rotation.z = Math.cos(state.clock.elapsedTime * 0.3) * 0.1;\r\n      \r\n      // Pulse effect for hovered bubbles\r\n      if (hovered) {\r\n        meshRef.current.scale.setScalar(1.2);\r\n      } else {\r\n        meshRef.current.scale.setScalar(1);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group position={[x, y, z]}>\r\n      <Sphere\r\n        ref={meshRef}\r\n        args={[size, 16, 16]}\r\n        onPointerOver={() => setHovered(true)}\r\n        onPointerOut={() => setHovered(false)}\r\n      >\r\n        <meshStandardMaterial\r\n          color={color}\r\n          transparent\r\n          opacity={0.8}\r\n          emissive={color}\r\n          emissiveIntensity={hovered ? 0.3 : 0.1}\r\n        />\r\n      </Sphere>\r\n      \r\n      {hovered && (\r\n        <Text\r\n          position={[0, size + 0.5, 0]}\r\n          fontSize={0.3}\r\n          color=\"white\"\r\n          anchorX=\"center\"\r\n          anchorY=\"middle\"\r\n        >\r\n          {`${data.value_btc.toFixed(2)} BTC`}\r\n        </Text>\r\n      )}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst BlockchainNetwork = ({ blockData }) => {\r\n  const blocksRef = useRef();\r\n  \r\n  useFrame((state) => {\r\n    if (blocksRef.current) {\r\n      blocksRef.current.rotation.y = state.clock.elapsedTime * 0.1;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={blocksRef} position={[0, 0, -10]}>\r\n      {blockData.map((block, index) => {\r\n        const angle = (index / blockData.length) * Math.PI * 2;\r\n        const radius = 8;\r\n        const x = Math.cos(angle) * radius;\r\n        const z = Math.sin(angle) * radius;\r\n        \r\n        return (\r\n          <group key={index} position={[x, 0, z]}>\r\n            <Box args={[1, 1, 1]} position={[0, 0, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"#4CAF50\"\r\n                transparent\r\n                opacity={0.7}\r\n                emissive=\"#4CAF50\"\r\n                emissiveIntensity={0.2}\r\n              />\r\n            </Box>\r\n            \r\n            {/* Connection lines */}\r\n            {index < blockData.length - 1 && (\r\n              <Cylinder\r\n                args={[0.05, 0.05, radius * 0.8]}\r\n                position={[x * 0.4, 0, z * 0.4]}\r\n                rotation={[0, 0, Math.atan2(z, x)]}\r\n              >\r\n                <meshStandardMaterial color=\"#2196F3\" transparent opacity={0.3} />\r\n              </Cylinder>\r\n            )}\r\n          </group>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst DataFlow = ({ summaryData }) => {\r\n  const flowRef = useRef();\r\n  \r\n  useFrame((state) => {\r\n    if (flowRef.current && summaryData) {\r\n      // Animate data flow particles\r\n      flowRef.current.children.forEach((child, index) => {\r\n        child.position.y += 0.02;\r\n        if (child.position.y > 10) {\r\n          child.position.y = -10;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  if (!summaryData) return null;\r\n\r\n  return (\r\n    <group ref={flowRef} position={[0, 0, 5]}>\r\n      {/* Data flow particles */}\r\n      {Array.from({ length: 20 }, (_, i) => (\r\n        <Sphere key={i} args={[0.1, 8, 8]} position={[\r\n          (Math.random() - 0.5) * 10,\r\n          (Math.random() - 0.5) * 20,\r\n          (Math.random() - 0.5) * 5\r\n        ]}>\r\n          <meshStandardMaterial\r\n            color=\"#64B5F6\"\r\n            transparent\r\n            opacity={0.6}\r\n            emissive=\"#64B5F6\"\r\n            emissiveIntensity={0.3}\r\n          />\r\n        </Sphere>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst CentralHub = ({ whaleData, summaryData }) => {\r\n  const hubRef = useRef();\r\n  \r\n  useFrame((state) => {\r\n    if (hubRef.current) {\r\n      hubRef.current.rotation.y = state.clock.elapsedTime * 0.2;\r\n      hubRef.current.rotation.x = Math.sin(state.clock.elapsedTime * 0.5) * 0.1;\r\n    }\r\n  });\r\n\r\n  const activeWhales = whaleData.length;\r\n  const totalVolume = summaryData?.total_btc || 0;\r\n\r\n  return (\r\n    <group ref={hubRef} position={[0, 0, 0]}>\r\n      {/* Central monitoring hub */}\r\n      <Sphere args={[2, 32, 32]}>\r\n        <meshStandardMaterial\r\n          color=\"#FF9800\"\r\n          transparent\r\n          opacity={0.8}\r\n          emissive=\"#FF9800\"\r\n          emissiveIntensity={0.3}\r\n        />\r\n      </Sphere>\r\n      \r\n      {/* Hub details */}\r\n      <Text\r\n        position={[0, 3, 0]}\r\n        fontSize={0.5}\r\n        color=\"white\"\r\n        anchorX=\"center\"\r\n        anchorY=\"middle\"\r\n      >\r\n        {`${activeWhales} Whales`}\r\n      </Text>\r\n      \r\n      <Text\r\n        position={[0, -3, 0]}\r\n        fontSize={0.4}\r\n        color=\"white\"\r\n        anchorX=\"center\"\r\n        anchorY=\"middle\"\r\n      >\r\n        {`${totalVolume.toFixed(1)} BTC`}\r\n      </Text>\r\n      \r\n      {/* Scanning rings */}\r\n      {Array.from({ length: 3 }, (_, i) => (\r\n        <mesh key={i} position={[0, 0, 0]}>\r\n          <ringGeometry args={[2.5 + i * 0.5, 2.6 + i * 0.5, 32]} />\r\n          <meshStandardMaterial\r\n            color=\"#2196F3\"\r\n            transparent\r\n            opacity={0.3 - i * 0.1}\r\n            side={THREE.DoubleSide}\r\n          />\r\n        </mesh>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst WhaleVisualization = ({ whaleData, summaryData, blockData, config }) => {\r\n  return (\r\n    <>\r\n      {/* Central monitoring hub */}\r\n      <CentralHub whaleData={whaleData} summaryData={summaryData} />\r\n      \r\n      {/* Whale transaction bubbles */}\r\n      {whaleData.map((whale, index) => (\r\n        <WhaleBubble\r\n          key={`${whale.hash}-${whale.timestamp}`}\r\n          data={whale}\r\n          config={config}\r\n          index={index}\r\n        />\r\n      ))}\r\n      \r\n      {/* Blockchain network visualization */}\r\n      <BlockchainNetwork blockData={blockData} />\r\n      \r\n      {/* Data flow particles */}\r\n      <DataFlow summaryData={summaryData} />\r\n      \r\n      {/* Ambient effects */}\r\n      <fog attach=\"fog\" args={['#0a1943', 10, 50]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WhaleVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}